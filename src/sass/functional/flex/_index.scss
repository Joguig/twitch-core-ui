// Twitch Core-UI
// Copyright (c) 2017, Twitch Interactive, Inc. All rights reserved.
// ============================================================================


// Map the classes.
// ----------------------------------------------------------------------------
$direction-classes: (
  'column':          column,
  'row':             row,
  'column-reverse':  column-reverse,
  'row-reverse':     row-reverse
);

$align-classes: (
  'start':     flex-start,
  'end':       flex-end,
  'center':    center,
  'baseline':  baseline,
  'stretch':   stretch
);

$content-classes: (
  'start':    flex-start,
  'end':      flex-end,
  'center':   center,
  'between':  space-between,
  'around':   space-around,
  'stretch':  stretch
);

$num-classes: (
  '0': 0,
  '1': 1,
  '2': 2,
  '3': 3,
  '4': 4
);

$flex-classes: (
  'inline-flex':     ('display', inline-flex, true),
  'flex':            ('flex-direction', $direction-classes, true),
  'align-items':     ('align-items', $align-classes),
  'align-self':      ('align-self', $align-classes),
  'justify-content': ('justify-content', $content-classes),
  'align-content':   ('align-content', $content-classes),
  'flex-grow':       ('flex-grow', $num-classes),
  'flex-shrink':     ('flex-shrink', $num-classes),
  'item-order':      ('order', $num-classes, true)
);


// Build the classes.
// ----------------------------------------------------------------------------
.flex {
  display: flex;

  // Legacy support; needs refactor.
  flex-direction: row;
  flex-wrap: wrap;
  list-style: none;

  // Set defaults on flex items to ensure better performance across browers.
  // sass-lint:disable no-universal-selectors no-combinators
  // --------------------------------------------------------------------------
  > * {
    flex: 0 1 auto;
    min-width: 0;
    max-width: 100%;
  }
  // --------------------------------------------------------------------------
  // sass-lint:enable no-universal-selectors no-combinators
}

@include build-classes((
  'flex': ('flex-wrap', (
    'wrap': wrap,
    'nowrap': nowrap
  ))
));

@include build-classes($flex-classes);


// ----------------------------------------------------------------------------
// Deprecation
// sass-lint:disable-all
// ----------------------------------------------------------------------------

// The `hyphenatedbem` lint setting doesn't like camel-casing.
// sass-lint:disable class-name-format
.flex--inline {
  display: inline-flex;
}

.flex--nowrap {
  flex-wrap: nowrap;
}

//Stacks inner divs on top of each other
.flex--column {
  flex-direction: column;
}

// Reverse rows or columns
.flex--rowReverse {
  flex-direction: row-reverse;
}

.flex--columnReverse {
  flex-direction: column-reverse;
}

//In case we need to force it tall
.flex--fullHeight {
  height: 100%;
}

// Affects the stretch or position of items inside container
// All items will align vertically in each row.
.flex--verticalCenter {
  align-items: center;
}

// All items will align to the bottom of each row.
.flex--verticalEnd {
  align-items: flex-end;
}

// All items will stretch to fill all available space
.flex--stretch {
  align-items: stretch;
}

// More info on justify
// https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content
.flex--horizontalCenter {
  justify-content: center;
}

.flex--horizontalEnd {
  justify-content: flex-end;
}

.flex--spaceBetween {
  justify-content: space-between;
}

// Flex Items
// ----------
.flex__item {
  flex: 0 1 auto;
}

// By default our flex items are set to not grow as the W3 standard
.flex__item--grow {
  flex-grow: 1;
}

.flex__item--noGrow {
  flex-grow: 0;
}

// Opposite of above
.flex__item--noShrink {
  flex-shrink: 0;
}

// Alight to the right
.flex__item--end {
  align-self: flex-end;
}

// sass-lint:enable class-name-format

// Flex ordering by media queries
// ------------------------------
// This allows us to set flex-order in a mobile first fashion.
// Suggested use if you need to overwrite is to set the mobile first
// option first (--xs) and then reset for desktop use with our other breakpoints
@for $i from 0 through 4 {
  .flex__item--order-xs-#{$i} {
    order: $i;
  }
}

@each $slug, $size in $breakpoints {
  @media (min-width: #{$size}) {
    @for $i from 1 through 4 {
      .flex__item--order-#{$slug}-#{$i} {
        order: $i;
      }
    }
  }
}

// ----------------------------------------------------------------------------
// sass-lint:enable-all
